{"ast":null,"code":"import _classCallCheck from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\src\\\\pages\\\\detail.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, ButtonToolbar } from 'reactstrap';\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\n\nvar jwt = require('jsonwebtoken');\n\nvar username = jwt.decode(localStorage.token);\n\nvar Detail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Detail, _Component);\n\n  function Detail(props) {\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Detail).call(this, props));\n\n    _this.delete = function (idComment) {\n      console.log(idComment);\n      var URL_Delte = 'http://localhost:5000/api/deleteComment';\n      var body = {\n        idComment: idComment\n      };\n      fetch(URL_Delte, {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (res) {\n        window.location.reload();\n      }).catch(function (err) {\n        console.log(\"gagal delete\");\n      });\n    };\n\n    _this.komen = function (event) {\n      var URL_POST = 'http://localhost:5000/api/postComment';\n\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        login: true\n      });\n\n      var body = {\n        idThread: _this.props.location.search.substring(1),\n        comment: _this.state.comments.postComment\n      };\n      console.log(body);\n      console.log('post comment : ' + _this.state.comments.postcomment);\n      fetch(URL_POST, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        // if(response.ok){\n        //   return response.json();   \n        // }\n        // return response.json().then(error=>{\n        //   throw new Error(error.message);\n        // });\n        window.location.reload();\n      }).catch(function (error) {\n        console.log('fetch error' + error);\n\n        _this.setState({\n          errorMessage: error.message\n        });\n\n        _this.setState({\n          login: false\n        });\n      });\n      event.preventDefault();\n    };\n\n    _this.handleChange = function (e) {\n      var inputName = e.target.name;\n      var inputValue = e.target.value;\n      var copyPost = Object.assign({}, _this.state.comments);\n      console.log(copyPost);\n      copyPost[inputName] = inputValue;\n\n      _this.setState({\n        comments: copyPost\n      });\n\n      console.log(_this.state.comments);\n    };\n\n    _this.state = {\n      post: [],\n      comment: [],\n      comments: [],\n      loading: false,\n      errorMessage: \"\",\n      login: false\n    };\n    console.log(localStorage.token);\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var body = {\n        idThread: this.props.location.search.substring(1)\n      };\n      this.setState({\n        loading: true\n      });\n      fetch('http://localhost:5000/api/getAThread', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        console.log(data);\n\n        _this2.setState({\n          post: data\n        });\n\n        _this2.setState({\n          loading: false\n        });\n      });\n      console.log(this.state.post);\n      this.setState({\n        loading: true\n      });\n      fetch('http://localhost:5000/api/getAComment', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        console.log(data);\n\n        _this2.setState({\n          comment: data\n        });\n\n        _this2.setState({\n          loading: false\n        });\n      });\n      console.log(this.state.comment);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.comment);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.loading && React.createElement(\"img\", {\n        src: require('../asset/loads.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), this.state.post.map(function (post) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, post.title), React.createElement(CardSubtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, post.username), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, post.post)));\n      }), React.createElement(Form, {\n        onSubmit: this.komen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Post Comment\"), React.createElement(Input, {\n        type: \"textarea\",\n        placeholder: \"What do u think?\",\n        name: \"postComment\",\n        id: \"postComment\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Comment\"))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Comments\"), this.state.comment.map(function (komen) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, komen.idUser), React.createElement(CardSubtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, komen.comments), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, komen.currentTimeStamp))), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, komen.idUser == username._id && React.createElement(ButtonToolbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/edit\",\n            state: {\n              idComment: komen.idComment\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Button, {\n          bsStyle: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Edit\")), React.createElement(CardLink, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.delete(komen.idComment);\n          },\n          bsStyle: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Delete\")))));\n      })));\n    }\n  }]);\n\n  return Detail;\n}(Component);\n\nexport { Detail as default };","map":{"version":3,"sources":["D:\\UB\\Semester 3\\Basdat\\Project Akhir\\forum\\frontend\\src\\pages\\detail.js"],"names":["React","Component","Link","Container","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","ButtonToolbar","Input","Form","FormGroup","Label","Button","jwt","require","username","decode","localStorage","token","Detail","props","delete","idComment","console","log","URL_Delte","body","fetch","method","headers","JSON","stringify","then","res","window","location","reload","catch","err","komen","event","URL_POST","setState","errorMessage","login","idThread","search","substring","comment","state","comments","postComment","postcomment","response","error","message","preventDefault","handleChange","e","inputName","target","name","inputValue","value","copyPost","Object","assign","post","loading","results","json","data","map","title","idUser","currentTimeStamp","_id","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Card, CardImg, CardText, CardBody, CardLink,\n  CardTitle, CardSubtitle, ButtonToolbar } from 'reactstrap';\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\nvar jwt  = require('jsonwebtoken');\nlet username = jwt.decode(localStorage.token);\n\n\nexport default class Detail extends Component {  \n  constructor(props){\n    super(props);\n    this.state={\n      post: [],\n      comment:[],\n      comments:[],\n      loading: false,\n      errorMessage: \"\",\n      login: false\n    }\n    console.log(localStorage.token);\n  }\n  componentDidMount(){\n    const body ={\n      idThread : this.props.location.search.substring(1)\n    }\n    this.setState({loading: true});\n      fetch('http://localhost:5000/api/getAThread',{\n        method: 'POST',\n        headers:{\n          'content-type':'application/json',\n          'authorization': localStorage.token\n        },\n        body:JSON.stringify(body)\n      }).then( results => {\n          return results.json();\n      }).then(data => {\n          console.log(data);\n          this.setState({post:data});\n          this.setState({loading: false});\n      })\n      console.log(this.state.post);\n      this.setState({loading: true});\n      fetch('http://localhost:5000/api/getAComment',{\n        method: 'POST',\n        headers:{\n          'content-type':'application/json',\n          'authorization': localStorage.token\n        },\n        body:JSON.stringify(body)\n      }).then( results => {\n          return results.json();\n      }).then(data => {\n          console.log(data);\n          this.setState({comment:data});\n          this.setState({loading: false});\n      })\n      console.log(this.state.comment);\n  } \n  \n  delete = (idComment) =>{\n    console.log(idComment);\n    const URL_Delte = 'http://localhost:5000/api/deleteComment';\n    const body={\n      idComment : idComment\n    }\n    fetch(URL_Delte,{\n      method: 'DELETE',\n      headers:{\n        'content-type':'application/json',\n        'authorization': localStorage.token\n      },\n      body: JSON.stringify(body)\n    }).then(res=>{\n      window.location.reload();\n    }).catch(err=>{\n       console.log(\"gagal delete\");\n    })\n  }\n  komen = (event) => {\n    let URL_POST = 'http://localhost:5000/api/postComment';\n    this.setState({ errorMessage: \"\" })\n    this.setState({login:true})\n    const body={\n      idThread : this.props.location.search.substring(1),\n      comment : this.state.comments.postComment\n    }\n    console.log(body);\n    console.log('post comment : ' + this.state.comments.postcomment);\n    fetch (URL_POST,{\n      method: 'POST',\n      headers:{\n        'content-type':'application/json',\n        'authorization': localStorage.token\n      },\n      body:JSON.stringify(body),\n    }).then(response=>{\n      // if(response.ok){\n      //   return response.json();   \n      // }\n      // return response.json().then(error=>{\n      //   throw new Error(error.message);\n      // });\n      window.location.reload();\n    }).catch(error=>{\n      console.log('fetch error'+error)\n      this.setState({ errorMessage: error.message });\n      this.setState({login:false})\n\n    });\n\n    event.preventDefault();\n\n  }\n\n  handleChange = e => {\n    let inputName = e.target.name;\n    let inputValue = e.target.value;\n    let copyPost = Object.assign({}, this.state.comments);\n    console.log(copyPost);\n    copyPost[inputName] = inputValue;\n    this.setState({ comments: copyPost });\n    console.log(this.state.comments);\n    \n  }\n  render() {\n    console.log(this.state.comment);\n    return (\n      <div>\n        <Container>\n          {this.state.loading&&(<img src={require('../asset/loads.svg')}></img>)}\n          {this.state.post.map(post => (\n              <Card>\n              <CardBody>\n                <CardTitle>{post.title}</CardTitle>\n                <CardSubtitle>{post.username}</CardSubtitle>\n              {/* </CardBody>\n              <img width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n              <CardBody> */}\n                <CardText>{post.post}</CardText>\n              </CardBody>\n            </Card>\n          ))}\n          <Form onSubmit={this.komen}>\n            <FormGroup>\n              <Label for=\"exampleText\">Post Comment</Label>\n              <Input type=\"textarea\" placeholder=\"What do u think?\" name=\"postComment\" id=\"postComment\" onChange={this.handleChange}/>\n              <Button>Comment</Button>\n            </FormGroup>\n          </Form>\n          <h2>Comments</h2>\n          {this.state.comment.map(komen => (\n              <Card>\n                <Container>\n                  <CardBody>\n                  <CardTitle>{komen.idUser}</CardTitle>\n                  <CardSubtitle>{komen.comments}</CardSubtitle>\n                {/* </CardBody>\n                <img width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n                <CardBody> */}\n                  <CardText>{komen.currentTimeStamp}</CardText>\n                  </CardBody>\n                </Container>\n                <Container>\n                  {(komen.idUser == username._id) && \n                  <ButtonToolbar>\n                    <Link to={{\n                      pathname: \"/edit\",\n                      state: {idComment: komen.idComment}\n                    }}>\n                      <Button bsStyle=\"primary\">Edit</Button>\n                    </Link>\n                    <CardLink>\n                      <Button onClick={() => this.delete(komen.idComment)} bsStyle=\"danger\">Delete</Button>\n                    </CardLink>\n                    \n                  </ButtonToolbar>\n                  }\n                </Container>\n            </Card>\n          ))}\n        \n        </Container>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}