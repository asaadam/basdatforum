{"ast":null,"code":"import _classCallCheck from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\src\\\\pages\\\\detail.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, ButtonToolbar } from 'reactstrap';\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\n\nvar jwt = require('jsonwebtoken');\n\nvar username = jwt.decode(localStorage.token);\n\nvar Detail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Detail, _Component);\n\n  function Detail(props) {\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Detail).call(this, props));\n\n    _this.delete = function (idComment) {\n      console.log(idComment);\n      var URL_Delte = 'http://localhost:5000/api/deleteComment';\n      var body = {\n        idComment: idComment\n      };\n      fetch(URL_Delte, {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (res) {\n        window.location.reload();\n      }).catch(function (err) {\n        console.log(\"gagal delete\");\n      });\n    };\n\n    _this.komen = function (event) {\n      var URL_POST = 'http://localhost:5000/api/postComment';\n\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        login: true\n      });\n\n      var body = {\n        idThread: _this.props.location.search.substring(1),\n        comment: _this.state.comments.postComment\n      };\n      console.log(body);\n      console.log('post comment : ' + _this.state.comments.postcomment);\n      fetch(URL_POST, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return response.json().then(function (error) {\n          throw new Error(error.message);\n        });\n      }).catch(function (error) {\n        console.log('fetch error' + error);\n\n        _this.setState({\n          errorMessage: error.message\n        });\n\n        _this.setState({\n          login: false\n        });\n      });\n      event.preventDefault();\n    };\n\n    _this.handleChange = function (e) {\n      var inputName = e.target.name;\n      var inputValue = e.target.value;\n      var copyPost = Object.assign({}, _this.state.comments);\n      console.log(copyPost);\n      copyPost[inputName] = inputValue;\n\n      _this.setState({\n        comments: copyPost\n      });\n\n      console.log(_this.state.comments);\n    };\n\n    _this.state = {\n      post: [],\n      comment: [],\n      comments: [],\n      loading: false,\n      errorMessage: \"\",\n      login: false\n    };\n    console.log(localStorage.token);\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var body = {\n        idThread: this.props.location.search.substring(1)\n      };\n      this.setState({\n        loading: true\n      });\n      fetch('http://localhost:5000/api/getAThread', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        console.log(data);\n\n        _this2.setState({\n          post: data\n        });\n\n        _this2.setState({\n          loading: false\n        });\n      });\n      console.log(this.state.post);\n      this.setState({\n        loading: true\n      });\n      fetch('http://localhost:5000/api/getAComment', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        console.log(data);\n\n        _this2.setState({\n          comment: data\n        });\n\n        _this2.setState({\n          loading: false\n        });\n      });\n      console.log(this.state.comment);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.comment);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.loading && React.createElement(\"img\", {\n        src: require('../asset/loads.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), this.state.post.map(function (post) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, post.title), React.createElement(CardSubtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, post.username), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, post.post)));\n      }), React.createElement(Form, {\n        onSubmit: this.komen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Post Comment\"), React.createElement(Input, {\n        type: \"textarea\",\n        placeholder: \"What do u think?\",\n        name: \"postComment\",\n        id: \"postComment\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Comment\"))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Comments\"), this.state.comment.map(function (komen) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, komen.idUser), React.createElement(CardSubtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, komen.comments), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, komen.currentTimeStamp))), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, komen.idUser == username._id && React.createElement(ButtonToolbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/edit\",\n            state: {\n              idComment: komen.idComment\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(Button, {\n          bsStyle: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Edit\")), React.createElement(CardLink, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.delete(komen.idComment);\n          },\n          bsStyle: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Delete\")))));\n      })));\n    }\n  }]);\n\n  return Detail;\n}(Component);\n\nexport { Detail as default };","map":{"version":3,"sources":["D:\\UB\\Semester 3\\Basdat\\Project Akhir\\forum\\frontend\\src\\pages\\detail.js"],"names":["React","Component","Link","Container","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","ButtonToolbar","Input","Form","FormGroup","Label","Button","jwt","require","username","decode","localStorage","token","Detail","props","delete","idComment","console","log","URL_Delte","body","fetch","method","headers","JSON","stringify","then","res","window","location","reload","catch","err","komen","event","URL_POST","setState","errorMessage","login","idThread","search","substring","comment","state","comments","postComment","postcomment","response","ok","json","error","Error","message","preventDefault","handleChange","e","inputName","target","name","inputValue","value","copyPost","Object","assign","post","loading","results","data","map","title","idUser","currentTimeStamp","_id","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Card, CardImg, CardText, CardBody, CardLink,\r\n  CardTitle, CardSubtitle, ButtonToolbar } from 'reactstrap';\r\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\r\nvar jwt  = require('jsonwebtoken');\r\nlet username = jwt.decode(localStorage.token);\r\n\r\n\r\nexport default class Detail extends Component {  \r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      post: [],\r\n      comment:[],\r\n      comments:[],\r\n      loading: false,\r\n      errorMessage: \"\",\r\n      login: false\r\n    }\r\n    console.log(localStorage.token);\r\n  }\r\n  componentDidMount(){\r\n    const body ={\r\n      idThread : this.props.location.search.substring(1)\r\n    }\r\n    this.setState({loading: true});\r\n      fetch('http://localhost:5000/api/getAThread',{\r\n        method: 'POST',\r\n        headers:{\r\n          'content-type':'application/json',\r\n          'authorization': localStorage.token\r\n        },\r\n        body:JSON.stringify(body)\r\n      }).then( results => {\r\n          return results.json();\r\n      }).then(data => {\r\n          console.log(data);\r\n          this.setState({post:data});\r\n          this.setState({loading: false});\r\n      })\r\n      console.log(this.state.post);\r\n      this.setState({loading: true});\r\n      fetch('http://localhost:5000/api/getAComment',{\r\n        method: 'POST',\r\n        headers:{\r\n          'content-type':'application/json',\r\n          'authorization': localStorage.token\r\n        },\r\n        body:JSON.stringify(body)\r\n      }).then( results => {\r\n          return results.json();\r\n      }).then(data => {\r\n          console.log(data);\r\n          this.setState({comment:data});\r\n          this.setState({loading: false});\r\n      })\r\n      console.log(this.state.comment);\r\n  } \r\n  \r\n  delete = (idComment) =>{\r\n    console.log(idComment);\r\n    const URL_Delte = 'http://localhost:5000/api/deleteComment';\r\n    const body={\r\n      idComment : idComment\r\n    }\r\n    fetch(URL_Delte,{\r\n      method: 'DELETE',\r\n      headers:{\r\n        'content-type':'application/json',\r\n        'authorization': localStorage.token\r\n      },\r\n      body: JSON.stringify(body)\r\n    }).then(res=>{\r\n      window.location.reload();\r\n    }).catch(err=>{\r\n       console.log(\"gagal delete\");\r\n    })\r\n  }\r\n  komen = (event) => {\r\n    let URL_POST = 'http://localhost:5000/api/postComment';\r\n    this.setState({ errorMessage: \"\" })\r\n    this.setState({login:true})\r\n    const body={\r\n      idThread : this.props.location.search.substring(1),\r\n      comment : this.state.comments.postComment\r\n    }\r\n    console.log(body);\r\n    console.log('post comment : ' + this.state.comments.postcomment);\r\n    fetch (URL_POST,{\r\n      method: 'POST',\r\n      headers:{\r\n        'content-type':'application/json',\r\n        'authorization': localStorage.token\r\n      },\r\n      body:JSON.stringify(body),\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        return response.json();   \r\n      }\r\n      return response.json().then(error=>{\r\n        throw new Error(error.message);\r\n      });\r\n    }).catch(error=>{\r\n      console.log('fetch error'+error)\r\n      this.setState({ errorMessage: error.message });\r\n      this.setState({login:false})\r\n\r\n    });\r\n\r\n    event.preventDefault();\r\n\r\n  }\r\n\r\n  handleChange = e => {\r\n    let inputName = e.target.name;\r\n    let inputValue = e.target.value;\r\n    let copyPost = Object.assign({}, this.state.comments);\r\n    console.log(copyPost);\r\n    copyPost[inputName] = inputValue;\r\n    this.setState({ comments: copyPost });\r\n    console.log(this.state.comments);\r\n    \r\n  }\r\n  render() {\r\n    console.log(this.state.comment);\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.state.loading&&(<img src={require('../asset/loads.svg')}></img>)}\r\n          {this.state.post.map(post => (\r\n              <Card>\r\n              <CardBody>\r\n                <CardTitle>{post.title}</CardTitle>\r\n                <CardSubtitle>{post.username}</CardSubtitle>\r\n              {/* </CardBody>\r\n              <img width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\r\n              <CardBody> */}\r\n                <CardText>{post.post}</CardText>\r\n              </CardBody>\r\n            </Card>\r\n          ))}\r\n          <Form onSubmit={this.komen}>\r\n            <FormGroup>\r\n              <Label for=\"exampleText\">Post Comment</Label>\r\n              <Input type=\"textarea\" placeholder=\"What do u think?\" name=\"postComment\" id=\"postComment\" onChange={this.handleChange}/>\r\n              <Button>Comment</Button>\r\n            </FormGroup>\r\n          </Form>\r\n          <h2>Comments</h2>\r\n          {this.state.comment.map(komen => (\r\n              <Card>\r\n                <Container>\r\n                  <CardBody>\r\n                  <CardTitle>{komen.idUser}</CardTitle>\r\n                  <CardSubtitle>{komen.comments}</CardSubtitle>\r\n                {/* </CardBody>\r\n                <img width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\r\n                <CardBody> */}\r\n                  <CardText>{komen.currentTimeStamp}</CardText>\r\n                  </CardBody>\r\n                </Container>\r\n                <Container>\r\n                  {(komen.idUser == username._id) && \r\n                  <ButtonToolbar>\r\n                    <Link to={{\r\n                      pathname: \"/edit\",\r\n                      state: {idComment: komen.idComment}\r\n                    }}>\r\n                      <Button bsStyle=\"primary\">Edit</Button>\r\n                    </Link>\r\n                    <CardLink>\r\n                      <Button onClick={() => this.delete(komen.idComment)} bsStyle=\"danger\">Delete</Button>\r\n                    </CardLink>\r\n                    \r\n                  </ButtonToolbar>\r\n                  }\r\n                </Container>\r\n            </Card>\r\n          ))}\r\n        \r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}