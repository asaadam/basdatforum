{"ast":null,"code":"import _classCallCheck from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\test\\\\basdat\\\\frontend\\\\src\\\\pages\\\\register.js\";\nimport React, { Component } from \"react\";\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport Joi from \"joi\";\nvar schema = Joi.object().keys({\n  username: Joi.string().alphanum().min(3).max(30).required(),\n  password: Joi.string().min(8).required(),\n  confirmPassword: Joi.string().min(8).required()\n});\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleChange = function (e) {\n      var inputName = e.target.name;\n      var inputValue = e.target.value;\n      var copyUser = Object.assign({}, _this.state);\n      copyUser[inputName] = inputValue;\n\n      _this.setState({\n        user: copyUser\n      });\n    };\n\n    _this.validuser = function () {\n      if (_this.state.tempPassword !== _this.state.tempConfirm) {\n        _this.setState({\n          errorMessage: \"Password must be match\"\n        });\n\n        console.log(_this.state.errorMessage);\n        return false;\n      }\n\n      var result = Joi.validate(_this.state.user, schema);\n\n      if (result.error === null) {\n        return true;\n      }\n\n      console.log(result.error);\n      return false;\n    };\n\n    _this.signup = function (event) {\n      var copyUser = Object.assign({}, _this.state);\n      copyUser.user.username = _this.state.tempuser;\n      copyUser.user.password = _this.state.tempPassword;\n      copyUser.user.confirmPassword = _this.state.tempConfirm;\n\n      _this.setState({\n        user: copyUser\n      });\n\n      console.log(_this.state.user);\n\n      _this.validuser();\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      errorMessage: \"\",\n      user: {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }\n    };\n    _this.validuser = _this.validuser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.signup = _this.signup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.errorMessage && React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(Form, {\n        onSubmit: this.signup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"Your Username\",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Username can only container alphanumeric , with minimum 3 characters\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Password \",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Password must be 8 or more characters\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Re-Type Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        placeholder: \"Re-Type Password \",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Re-Type your password\")), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };","map":{"version":3,"sources":["D:\\test\\basdat\\frontend\\src\\pages\\register.js"],"names":["React","Component","Alert","Button","Form","FormGroup","Label","Input","FormText","Joi","schema","object","keys","username","string","alphanum","min","max","required","password","confirmPassword","Register","props","handleChange","e","inputName","target","name","inputValue","value","copyUser","Object","assign","state","setState","user","validuser","tempPassword","tempConfirm","errorMessage","console","log","result","validate","error","signup","event","tempuser","preventDefault","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText\r\n} from \"reactstrap\";\r\n\r\nimport Joi from \"joi\";\r\n\r\nconst schema = Joi.object().keys({\r\n  username: Joi.string()\r\n    .alphanum()\r\n    .min(3)\r\n    .max(30)\r\n    .required(),\r\n  password: Joi.string()\r\n    .min(8)\r\n    .required(),\r\n    confirmPassword: Joi.string()\r\n    .min(8)\r\n    .required()\r\n});\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMessage: \"\",\r\n      user: {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      },\r\n      \r\n    };\r\n    this.validuser = this.validuser.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n  }\r\n  handleChange = e => {\r\n    let inputName = e.target.name;\r\n    let inputValue = e.target.value;\r\n    let copyUser = Object.assign({}, this.state);\r\n    copyUser[inputName]=inputValue;\r\n    this.setState({user:copyUser});\r\n  }\r\n\r\n  validuser = () => {\r\n    if (this.state.tempPassword !== this.state.tempConfirm) {\r\n      this.setState({ errorMessage: \"Password must be match\" });\r\n      console.log(this.state.errorMessage);\r\n      return false;\r\n    }\r\n    const result = Joi.validate(this.state.user, schema);\r\n    if (result.error === null) {\r\n      return true;\r\n    }\r\n\r\n    console.log(result.error);\r\n    return false;\r\n  };\r\n\r\n  signup = event => {\r\n    let copyUser = Object.assign({}, this.state);\r\n    copyUser.user.username = this.state.tempuser;\r\n    copyUser.user.password = this.state.tempPassword;\r\n    copyUser.user.confirmPassword = this.state.tempConfirm;\r\n    this.setState({ user: copyUser });\r\n    console.log(this.state.user);\r\n    this.validuser();\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.errorMessage && (\r\n          <Alert color=\"danger\">{this.state.errorMessage}</Alert>\r\n        )}\r\n        <Form onSubmit={this.signup}>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Your Username\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n            <FormText color=\"white\">\r\n              Username can only container alphanumeric , with minimum 3\r\n              characters\r\n            </FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password \"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n            <FormText color=\"white\">\r\n              Password must be 8 or more characters\r\n            </FormText>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Re-Type Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              placeholder=\"Re-Type Password \"\r\n              required\r\n              onChange={this.handleChange}\r\n\r\n            />\r\n            <FormText color=\"white\">Re-Type your password</FormText>\r\n          </FormGroup>\r\n          <Button>Register</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}