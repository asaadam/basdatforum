{"ast":null,"code":"import _classCallCheck from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\src\\\\component\\\\Post.js\";\nimport React, { Component } from 'react';\nimport Joi from 'joi';\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\nvar schema = Joi.object().keys({\n  postTitle: Joi.string().string().max(60).required(),\n  postThread: Joi.string().required()\n});\nvar URL_LOGIN = 'http://localhost:5000/api/postThread';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this, props));\n\n    _this.login = function (event) {\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        login: true\n      });\n\n      var body = {\n        postTitle: _this.state.user.postTitle,\n        postThread: _this.state.user.postThread\n      };\n      fetch(URL_LOGIN, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return response.json().then(function (error) {\n          throw new Error(error.message);\n        });\n      }).then(function (token) {\n        localStorage.token = token;\n\n        _this.setState({\n          done: true\n        });\n\n        _this.setState({\n          login: false\n        });\n\n        _this.props.history.replace('/dashboard');\n      }).catch(function (error) {\n        console.log('fetch error' + error);\n\n        _this.setState({\n          errorMessage: error.message\n        });\n\n        _this.setState({\n          login: false\n        });\n      });\n      event.preventDefault();\n    };\n\n    _this.handleChange = function (e) {\n      var inputName = e.target.name;\n      var inputValue = e.target.value;\n      var copyUser = Object.assign({}, _this.state.user);\n      copyUser[inputName] = inputValue;\n\n      _this.setState({\n        user: copyUser\n      });\n    };\n\n    _this.state = {\n      done: false,\n      errorMessage: \"\",\n      post: {\n        postTitle: \"\",\n        postThread: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Text Area\"), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Thead Title\",\n        name: \"threadTitle\",\n        id: \"threadTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"textarea\",\n        placeholder: \"What do u think?\",\n        name: \"threadPost\",\n        id: \"threadPost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Button\")));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport { Post as default };","map":{"version":3,"sources":["D:\\UB\\Semester 3\\Basdat\\Project Akhir\\forum\\frontend\\src\\component\\Post.js"],"names":["React","Component","Joi","Input","Form","FormGroup","Label","Button","schema","object","keys","postTitle","string","max","required","postThread","URL_LOGIN","Post","props","login","event","setState","errorMessage","body","state","user","fetch","method","headers","localStorage","token","JSON","stringify","then","response","ok","json","error","Error","message","done","history","replace","catch","console","log","preventDefault","handleChange","e","inputName","target","name","inputValue","value","copyUser","Object","assign","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Joi from 'joi';\r\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\r\n\r\nconst schema = Joi.object().keys({\r\n  postTitle: Joi.string()\r\n    .string()\r\n    .max(60)\r\n    .required(),\r\n  postThread: Joi.string()\r\n    .required(),\r\n});\r\nconst URL_LOGIN ='http://localhost:5000/api/postThread';\r\n\r\nexport default class Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      done:false,\r\n      errorMessage: \"\",\r\n      post: {\r\n        postTitle: \"\",\r\n        postThread: \"\",\r\n      },\r\n    }\r\n  }\r\n  login = (event) => {\r\n    this.setState({ errorMessage: \"\" })\r\n    this.setState({login:true})\r\n    const body={\r\n      postTitle : this.state.user.postTitle,\r\n      postThread : this.state.user.postThread\r\n    }\r\n    \r\n    fetch (URL_LOGIN,{\r\n      method: 'POST',\r\n      headers:{\r\n        'content-type':'application/json',\r\n        'authorization': localStorage.token\r\n      },\r\n      body:JSON.stringify(body),\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        return response.json();\r\n        \r\n      }\r\n      return response.json().then(error=>{\r\n        throw new Error(error.message);\r\n      });\r\n    }).then(token=>{\r\n      localStorage.token=token;\r\n      this.setState({done:true});\r\n      this.setState({login:false});\r\n      this.props.history.replace('/dashboard')\r\n    }).catch(error=>{\r\n      console.log('fetch error'+error)\r\n      this.setState({ errorMessage: error.message });\r\n      this.setState({login:false})\r\n\r\n    });\r\n\r\n    event.preventDefault();\r\n\r\n  }\r\n  handleChange = e => {\r\n    let inputName = e.target.name;\r\n    let inputValue = e.target.value;\r\n    let copyUser = Object.assign({}, this.state.user);\r\n    copyUser[inputName] = inputValue;\r\n\r\n    this.setState({ user: copyUser });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.login}>\r\n          <FormGroup>\r\n            <Label for=\"exampleText\">Text Area</Label>\r\n            <Input type=\"text\" placeholder=\"Thead Title\" name=\"threadTitle\" id=\"threadTitle\"/>\r\n            <Input type=\"textarea\" placeholder=\"What do u think?\" name=\"threadPost\" id=\"threadPost\"/>\r\n            <Button>Button</Button>\r\n        </FormGroup>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}