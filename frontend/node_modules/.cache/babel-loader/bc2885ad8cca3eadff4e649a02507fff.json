{"ast":null,"code":"import _classCallCheck from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\test\\\\basdat\\\\frontend\\\\src\\\\pages\\\\register.js\";\nimport React, { Component } from \"react\";\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport Joi from 'joi';\nvar schema = Joi.object().keys({\n  username: Joi.string().alphanum().min(3).max(30).required(),\n  password: Joi.string().min(8).required(),\n  confirmpassword: Joi.string().min(8).required()\n});\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.validuser = function () {\n      if (_this.state.tempPassword !== _this.state.tempConfirm) {\n        _this.setState({\n          errorMessage: 'Password must be match'\n        });\n\n        console.log(_this.state.errorMessage);\n        return false;\n      }\n\n      var result = Joi.validate(_this.state.user, schema);\n\n      if (result.error === null) {\n        return true;\n      } else {\n        console.log(result.error);\n        return false;\n      }\n    };\n\n    _this.signup = function (event) {\n      var copyUser = Object.assign({}, _this.state);\n      copyUser.user.username = _this.state.tempuser;\n      copyUser.user.password = _this.state.tempPassword;\n      copyUser.user.confirmPassword = _this.state.tempConfirm;\n\n      _this.setState({\n        user: copyUser\n      });\n\n      _this.validuser();\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      errorMessage: \"\",\n      user: {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      tempuser: \"\",\n      tempPassword: \"\",\n      tempConfirm: \"\"\n    };\n    _this.validuser = _this.validuser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.signup = _this.signup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.errorMessage && React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(Form, {\n        onSubmit: this.signup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"Your Username\",\n        required: true,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tempuser: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Username can only container alphanumeric , with minimum 3 characters\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Password \",\n        required: true,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tempPassword: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Password must be 8 or more characters\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Re-Type Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        placeholder: \"Re-Type Password \",\n        required: true,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tempConfirm: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Re-Type your password\")), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };","map":{"version":3,"sources":["D:\\test\\basdat\\frontend\\src\\pages\\register.js"],"names":["React","Component","Alert","Button","Form","FormGroup","Label","Input","FormText","Joi","schema","object","keys","username","string","alphanum","min","max","required","password","confirmpassword","Register","props","validuser","state","tempPassword","tempConfirm","setState","errorMessage","console","log","result","validate","user","error","signup","event","copyUser","Object","assign","tempuser","confirmPassword","preventDefault","bind","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText\r\n} from \"reactstrap\";\r\n\r\nimport Joi from 'joi';\r\n\r\n\r\nconst schema = Joi.object().keys({\r\n  username: Joi.string().alphanum().min(3).max(30).required(),\r\n  password: Joi.string().min(8).required(),\r\n  confirmpassword: Joi.string().min(8).required()\r\n})\r\n\r\nexport default class Register extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMessage: \"\",\r\n      user: {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      },\r\n      tempuser: \"\",\r\n      tempPassword: \"\",\r\n      tempConfirm: \"\"\r\n    };\r\n    this.validuser=this.validuser.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n  }\r\n\r\n  validuser = () => {\r\n\r\n    if (this.state.tempPassword !== this.state.tempConfirm) {\r\n      this.setState({errorMessage:'Password must be match'})\r\n      console.log(this.state.errorMessage);\r\n      return false;\r\n    }\r\n    const result = Joi.validate(this.state.user,schema);\r\n      if(result.error === null ){\r\n        return true;\r\n      }\r\n      else{\r\n        console.log(result.error);\r\n        return false;\r\n      }\r\n  };\r\n\r\n  signup = event => {\r\n    let copyUser = Object.assign({}, this.state);\r\n    copyUser.user.username = this.state.tempuser;\r\n    copyUser.user.password = this.state.tempPassword;\r\n    copyUser.user.confirmPassword = this.state.tempConfirm;\r\n    this.setState({ user: copyUser });\r\n    this.validuser();\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.errorMessage && <Alert color=\"danger\">{this.state.errorMessage}</Alert>}\r\n        <Form onSubmit={this.signup}>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Your Username\"\r\n              required\r\n              onChange={event =>\r\n                this.setState({ tempuser: event.target.value })\r\n              }\r\n            />\r\n            <FormText color=\"white\">\r\n              Username can only container alphanumeric , with minimum 3\r\n              characters\r\n            </FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password \"\r\n              required\r\n              onChange={event =>\r\n                this.setState({ tempPassword: event.target.value })\r\n              }\r\n            />\r\n            <FormText color=\"white\">\r\n              Password must be 8 or more characters\r\n            </FormText>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Re-Type Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              placeholder=\"Re-Type Password \"\r\n              required\r\n              onChange={event =>\r\n                this.setState({ tempConfirm: event.target.value })\r\n              }\r\n            />\r\n            <FormText color=\"white\">Re-Type your password</FormText>\r\n          </FormGroup>\r\n          <Button>Register</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}