{"ast":null,"code":"import _classCallCheck from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\test\\\\basdat\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\test\\\\basdat\\\\frontend\\\\src\\\\pages\\\\register.js\";\nimport React, { Component } from \"react\";\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport Joi from \"joi\";\nimport { Route, Redirect } from 'react-router-dom';\nvar schema = Joi.object().keys({\n  username: Joi.string().alphanum().min(3).max(30).required(),\n  password: Joi.string().min(8).required(),\n  confirmPassword: Joi.string().min(8).required()\n});\nvar URL_SINGUP = 'http://localhost:5000/auth/signup';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleChange = function (e) {\n      var inputName = e.target.name;\n      var inputValue = e.target.value;\n      var copyUser = Object.assign({}, _this.state.user);\n      copyUser[inputName] = inputValue;\n\n      _this.setState({\n        user: copyUser\n      });\n    };\n\n    _this.validuser = function () {\n      if (_this.state.user.password !== _this.state.user.confirmPassword) {\n        _this.setState({\n          errorMessage: \"Password must be match\"\n        });\n\n        _this.setState({\n          signup: false\n        });\n\n        return false;\n      }\n\n      var result = Joi.validate(_this.state.user, schema);\n\n      if (result.error === null) {\n        return true;\n      }\n\n      if (result.error.message.includes('username')) {\n        _this.setState({\n          errorMessage: \"Username invalid oi\"\n        });\n      } else {\n        _this.setState({\n          errorMessage: \"Password invalid\"\n        });\n      }\n\n      return false;\n    };\n\n    _this.signup = function (event) {\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      var body = {\n        username: _this.state.user.username,\n        password: _this.state.user.password\n      };\n\n      _this.setState({\n        signup: true\n      });\n\n      if (_this.validuser()) {\n        fetch(URL_SINGUP, {\n          method: 'POST',\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return response.json().then(function (error) {\n            throw new Error(error.message);\n          });\n        }).then(function (user) {\n          _this.setState({\n            done: true\n          });\n\n          _this.setState({\n            signup: false\n          });\n        }).catch(function (error) {\n          _this.setState({\n            errorMessage: error.message\n          });\n\n          _this.setState({\n            signup: false\n          });\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      done: false,\n      signup: false,\n      errorMessage: \"\",\n      user: {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validuser = _this.validuser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.signup = _this.signup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.done === true) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.signup && React.createElement(\"img\", {\n        src: require('../asset/loading.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), this.state.errorMessage && React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(Form, {\n        onSubmit: this.signup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"Your Username\",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Username can only container alphanumeric , with minimum 3 characters\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Password \",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Password must be 8 or more characters\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Re-Type Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        placeholder: \"Re-Type Password \",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Re-Type your password\")), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };","map":{"version":3,"sources":["D:\\test\\basdat\\frontend\\src\\pages\\register.js"],"names":["React","Component","Alert","Button","Form","FormGroup","Label","Input","FormText","Joi","Route","Redirect","schema","object","keys","username","string","alphanum","min","max","required","password","confirmPassword","URL_SINGUP","Register","props","handleChange","e","inputName","target","name","inputValue","value","copyUser","Object","assign","state","user","setState","validuser","errorMessage","signup","result","validate","error","message","includes","event","body","fetch","method","JSON","stringify","headers","then","response","ok","json","Error","done","catch","preventDefault","bind","require"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText\r\n} from \"reactstrap\";\r\nimport Joi from \"joi\";\r\nimport { Route ,Redirect } from 'react-router-dom'\r\n\r\nconst schema = Joi.object().keys({\r\n  username: Joi.string()\r\n    .alphanum()\r\n    .min(3)\r\n    .max(30)\r\n    .required(),\r\n  password: Joi.string()\r\n    .min(8)\r\n    .required(),\r\n    confirmPassword: Joi.string()\r\n    .min(8)\r\n    .required()\r\n});\r\nconst URL_SINGUP ='http://localhost:5000/auth/signup';\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      done:false,\r\n      signup:false,\r\n      errorMessage: \"\",\r\n      user: {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      },\r\n      \r\n    };\r\n    this.handleChange=this.handleChange.bind(this);\r\n    this.validuser = this.validuser.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n  }\r\n  handleChange = e => {\r\n    let inputName = e.target.name;\r\n    let inputValue = e.target.value;\r\n    let copyUser = Object.assign({}, this.state.user);\r\n    copyUser[inputName]=inputValue;\r\n\r\n    this.setState({user:copyUser});\r\n  }\r\n\r\n  validuser = () => {\r\n    if (this.state.user.password !== this.state.user.confirmPassword) {\r\n      this.setState({ errorMessage: \"Password must be match\" });\r\n      this.setState({signup:false})\r\n      return false;\r\n    }\r\n    const result = Joi.validate(this.state.user, schema);\r\n    if (result.error === null) {\r\n      return true;\r\n    }\r\n\r\n    if(result.error.message.includes('username')){\r\n      this.setState({ errorMessage: \"Username invalid oi\" });\r\n    }\r\n    else{\r\n      this.setState({ errorMessage: \"Password invalid\" });\r\n\r\n    }\r\n    return false;\r\n  };\r\n\r\n  signup = (event) => {\r\n    this.setState({ errorMessage: \"\" });\r\n    const body = {\r\n      username:this.state.user.username,\r\n      password:this.state.user.password\r\n    }\r\n    this.setState({signup:true})\r\n    if (this.validuser()){\r\n      fetch(URL_SINGUP,{\r\n        method:'POST',\r\n        body:JSON.stringify(body),\r\n        headers:{\r\n          'Content-Type':'application/json'\r\n        }\r\n      }).then(response=>{\r\n        if(response.ok){\r\n          return response.json();\r\n          \r\n        }\r\n        return response.json().then(error=>{\r\n          throw new Error(error.message);\r\n        });\r\n      }).then(user=>{\r\n        this.setState({done:true})\r\n        this.setState({signup:false})\r\n      }).catch(error=>{\r\n        this.setState({ errorMessage: error.message });\r\n        this.setState({signup:false})\r\n\r\n      });\r\n\r\n    }\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  \r\n  render() {\r\n    if (this.state.done === true) {\r\n      return <Redirect to='/login' />\r\n    }\r\n    return (\r\n      \r\n      <div>\r\n      {this.state.signup&&(<img src={require('../asset/loading.svg')}></img>)}\r\n     \r\n        {this.state.errorMessage && (\r\n          <Alert color=\"danger\">{this.state.errorMessage}</Alert>\r\n        )}\r\n        <Form onSubmit={this.signup}>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Your Username\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n            <FormText color=\"white\">\r\n              Username can only container alphanumeric , with minimum 3\r\n              characters\r\n            </FormText>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password \"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n            <FormText color=\"white\">\r\n              Password must be 8 or more characters\r\n            </FormText>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Re-Type Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              placeholder=\"Re-Type Password \"\r\n              required\r\n              onChange={this.handleChange}\r\n\r\n            />\r\n            <FormText color=\"white\">Re-Type your password</FormText>\r\n          </FormGroup>\r\n          <Button>Register</Button>\r\n        </Form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}