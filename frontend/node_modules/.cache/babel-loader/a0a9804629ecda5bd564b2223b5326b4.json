{"ast":null,"code":"import _classCallCheck from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\src\\\\component\\\\edit.js\";\nimport React, { Component } from 'react';\nimport Joi from 'joi';\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\nimport Ccard from './Cardd';\nimport { timingSafeEqual } from 'crypto'; // const schema = Joi.object().keys({\n//   postTitle: Joi.string()\n//     .string()\n//     .max(60)\n//     .required(),\n//   postThread: Joi.string()\n//     .required(),\n// });\n\nvar URL_POST = 'http://localhost:5000/api/editComment';\n\nvar Edit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Edit, _Component);\n\n  function Edit(props) {\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Edit).call(this, props));\n\n    _this.updateComment = function (event) {\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        login: true\n      });\n\n      var body = {\n        idComment: _this.state.Comment[0].idComment,\n        comment: _this.state.initValue\n      };\n      console.log(body);\n      fetch(URL_POST, {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return response.json().then(function (error) {\n          throw new Error(error.message);\n        });\n      }).catch(function (error) {\n        console.log('fetch error' + error);\n\n        _this.setState({\n          errorMessage: error.message\n        });\n\n        _this.setState({\n          login: false\n        });\n      });\n      event.preventDefault();\n    };\n\n    _this.state = {\n      done: false,\n      errorMessage: \"\",\n      idComment: _this.props.location.state.idComment,\n      initValue: '',\n      Comment: [],\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(Edit, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      var body = {\n        idComment: this.state.idComment\n      };\n      console.log(body);\n      fetch('http://localhost:5000/api/getComment', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': localStorage.token\n        },\n        body: JSON.stringify(body)\n      }).then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        _this2.setState({\n          Comment: data\n        });\n\n        _this2.setState({\n          initValue: data[0].comments\n        });\n\n        _this2.setState({\n          loading: false\n        });\n      });\n      console.log(this.state.Comment);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.Comment[0]);\n      return React.createElement(Form, {\n        onSubmit: this.updateComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Edit Comment\"), React.createElement(Input, {\n        type: \"textarea\",\n        placeholder: \"What do u think?\",\n        name: \"postComment\",\n        id: \"postComment\",\n        value: this.state.initValue,\n        onChange: function onChange(input) {\n          _this3.setState({\n            initValue: input.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Comment\")));\n    }\n  }]);\n\n  return Edit;\n}(Component);\n\nexport { Edit as default };","map":{"version":3,"sources":["D:\\UB\\Semester 3\\Basdat\\Project Akhir\\forum\\frontend\\src\\component\\edit.js"],"names":["React","Component","Joi","Input","Form","FormGroup","Label","Button","Ccard","timingSafeEqual","URL_POST","Edit","props","updateComment","event","setState","errorMessage","login","body","idComment","state","Comment","comment","initValue","console","log","fetch","method","headers","localStorage","token","JSON","stringify","then","response","ok","json","error","Error","message","catch","preventDefault","done","location","comments","loading","results","data","input","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Joi from 'joi';\r\nimport { Input, Form, FormGroup, Label, Button } from 'reactstrap';\r\nimport Ccard from './Cardd';\r\nimport { timingSafeEqual } from 'crypto';\r\n\r\n// const schema = Joi.object().keys({\r\n//   postTitle: Joi.string()\r\n//     .string()\r\n//     .max(60)\r\n//     .required(),\r\n//   postThread: Joi.string()\r\n//     .required(),\r\n// });\r\nconst URL_POST ='http://localhost:5000/api/editComment';\r\n\r\nexport default class Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      done:false,\r\n      errorMessage: \"\",\r\n      idComment: this.props.location.state.idComment,\r\n      initValue:'',\r\n      Comment: [],\r\n      comments:[]\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    this.setState({loading: true});\r\n    const body={\r\n        idComment : this.state.idComment\r\n    }\r\n    console.log(body)\r\n    fetch('http://localhost:5000/api/getComment',{\r\n        method: 'POST',\r\n        headers:{\r\n        'content-type':'application/json',\r\n        'authorization': localStorage.token\r\n        },\r\n        body:JSON.stringify(body)\r\n    }).then( results => {\r\n        return results.json();\r\n    }).then(data => {\r\n        this.setState({Comment:data});\r\n        this.setState({initValue:data[0].comments});\r\n        this.setState({loading: false});\r\n    })\r\n    console.log(this.state.Comment);\r\n  }\r\n  updateComment = (event) => {\r\n    this.setState({ errorMessage: \"\" })\r\n    this.setState({login:true})\r\n    const body={\r\n      idComment : this.state.Comment[0].idComment,\r\n      comment : this.state.initValue\r\n    }\r\n    console.log(body)\r\n    fetch (URL_POST,{\r\n      method: 'PUT',\r\n      headers:{\r\n        'content-type':'application/json',\r\n        'authorization': localStorage.token\r\n      },\r\n      body:JSON.stringify(body),\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        return response.json();\r\n        \r\n      }\r\n      return response.json().then(error=>{\r\n        throw new Error(error.message);\r\n      });\r\n    }).catch(error=>{\r\n      console.log('fetch error'+error)\r\n      this.setState({ errorMessage: error.message });\r\n      this.setState({login:false})\r\n\r\n    });\r\n\r\n    event.preventDefault();\r\n\r\n  }\r\n\r\n  render() {\r\n      console.log(this.state.Comment[0]);\r\n    return (\r\n      <Form onSubmit={this.updateComment}>\r\n     \r\n            \r\n          <FormGroup>\r\n          <Label for=\"exampleText\">Edit Comment</Label>\r\n          <Input type=\"textarea\" placeholder=\"What do u think?\" name=\"postComment\" id=\"postComment\" value={this.state.initValue} onChange={input=>{this.setState({initValue:input.target.value})}}/>\r\n              <Button>Comment</Button>\r\n      </FormGroup>  \r\n        \r\n          \r\n      </Form>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}