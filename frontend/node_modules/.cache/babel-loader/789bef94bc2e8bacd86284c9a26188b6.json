{"ast":null,"code":"import _classCallCheck from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\UB\\\\Semester 3\\\\Basdat\\\\Project Akhir\\\\forum\\\\frontend\\\\src\\\\pages\\\\loginPage.js\";\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Joi from \"joi\";\nimport DashBoard from '../pages/dashboard';\nvar schema = Joi.object().keys({\n  username: Joi.string().alphanum().min(3).max(30).required(),\n  password: Joi.string().min(8).required()\n});\nvar URL_LOGIN = 'http://localhost:5000/auth/login';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props));\n\n    _this.login = function (event) {\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        login: true\n      });\n\n      if (_this.validuser()) {\n        var body = {\n          username: _this.state.user.username,\n          password: _this.state.user.password\n        };\n        fetch(URL_LOGIN, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        }).then(function (response) {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return response.json().then(function (error) {\n            throw new Error(error.message);\n          });\n        }).then(function (token) {\n          localStorage.token = token;\n\n          _this.setState({\n            done: true\n          });\n\n          _this.setState({\n            login: false\n          });\n\n          _this.props.history.replace('/dashboard');\n        }).catch(function (error) {\n          console.log('fetch error' + error);\n\n          _this.setState({\n            errorMessage: error.message\n          });\n\n          _this.setState({\n            login: false\n          });\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    _this.handleChange = function (e) {\n      var inputName = e.target.name;\n      var inputValue = e.target.value;\n      var copyUser = Object.assign({}, _this.state.user);\n      copyUser[inputName] = inputValue;\n\n      _this.setState({\n        user: copyUser\n      });\n    };\n\n    _this.validuser = function () {\n      var result = Joi.validate(_this.state.user, schema);\n\n      if (result.error === null) {\n        return true;\n      }\n\n      console.log(result);\n\n      if (result.error.message.includes('username')) {\n        _this.setState({\n          errorMessage: \"Username invalid\"\n        });\n\n        _this.setState({\n          login: false\n        });\n      } else {\n        _this.setState({\n          errorMessage: \"Password invalid\"\n        });\n\n        _this.setState({\n          login: false\n        });\n      }\n\n      return false;\n    };\n\n    _this.state = {\n      done: false,\n      login: false,\n      errorMessage: \"\",\n      user: {\n        username: \"\",\n        password: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/dashboard\",\n        component: DashBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), this.state.login && React.createElement(\"img\", {\n        src: require('../asset/loading.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), this.state.errorMessage && React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(Form, {\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"username\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"Your Username\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"Your Password \",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Login\"), React.createElement(FormText, {\n        color: \"muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Doesn't have an account? register \", React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"here\"))));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nexport { LoginPage as default };","map":{"version":3,"sources":["D:\\UB\\Semester 3\\Basdat\\Project Akhir\\forum\\frontend\\src\\pages\\loginPage.js"],"names":["React","Component","Alert","Button","Form","FormGroup","Label","Input","FormText","BrowserRouter","Router","Route","Link","Redirect","Joi","DashBoard","schema","object","keys","username","string","alphanum","min","max","required","password","URL_LOGIN","LoginPage","props","login","event","setState","errorMessage","validuser","body","state","user","fetch","method","headers","JSON","stringify","then","response","ok","json","error","Error","message","token","localStorage","done","history","replace","catch","console","log","preventDefault","handleChange","e","inputName","target","name","inputValue","value","copyUser","Object","assign","result","validate","includes","require","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,QAAvD,QAAuE,YAAvE;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,QAA/C,QAA8D,kBAA9D;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAGA,IAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,GAAaC,IAAb,CAAkB;AAC/BC,EAAAA,QAAQ,EAAEL,GAAG,CAACM,MAAJ,GACPC,QADO,GAEPC,GAFO,CAEH,CAFG,EAGPC,GAHO,CAGH,EAHG,EAIPC,QAJO,EADqB;AAM/BC,EAAAA,QAAQ,EAAEX,GAAG,CAACM,MAAJ,GACPE,GADO,CACH,CADG,EAEPE,QAFO;AANqB,CAAlB,CAAf;AAYA,IAAME,SAAS,GAAE,kCAAjB;;IAGqBC,S;;;;;AAGnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAanBC,KAbmB,GAaX,UAACC,KAAD,EAAW;AACjB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAC;AAAP,OAAd;;AACA,UAAI,MAAKI,SAAL,EAAJ,EAAsB;AACpB,YAAMC,IAAI,GAAC;AACTf,UAAAA,QAAQ,EAAG,MAAKgB,KAAL,CAAWC,IAAX,CAAgBjB,QADlB;AAETM,UAAAA,QAAQ,EAAG,MAAKU,KAAL,CAAWC,IAAX,CAAgBX;AAFlB,SAAX;AAKAY,QAAAA,KAAK,CAAEX,SAAF,EAAY;AACfY,UAAAA,MAAM,EAAE,MADO;AAEfC,UAAAA,OAAO,EAAC;AACN,4BAAe;AADT,WAFO;AAKfL,UAAAA,IAAI,EAACM,IAAI,CAACC,SAAL,CAAeP,IAAf;AALU,SAAZ,CAAL,CAMGQ,IANH,CAMQ,UAAAC,QAAQ,EAAE;AAChB,cAAGA,QAAQ,CAACC,EAAZ,EAAe;AACb,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AAED;;AACD,iBAAOF,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAI,KAAK,EAAE;AACjC,kBAAM,IAAIC,KAAJ,CAAUD,KAAK,CAACE,OAAhB,CAAN;AACD,WAFM,CAAP;AAGD,SAdD,EAcGN,IAdH,CAcQ,UAAAO,KAAK,EAAE;AACbC,UAAAA,YAAY,CAACD,KAAb,GAAmBA,KAAnB;;AACA,gBAAKlB,QAAL,CAAc;AAACoB,YAAAA,IAAI,EAAC;AAAN,WAAd;;AACA,gBAAKpB,QAAL,CAAc;AAACF,YAAAA,KAAK,EAAC;AAAP,WAAd;;AACA,gBAAKD,KAAL,CAAWwB,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B;AACD,SAnBD,EAmBGC,KAnBH,CAmBS,UAAAR,KAAK,EAAE;AACdS,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcV,KAA1B;;AACA,gBAAKf,QAAL,CAAc;AAAEC,YAAAA,YAAY,EAAEc,KAAK,CAACE;AAAtB,WAAd;;AACA,gBAAKjB,QAAL,CAAc;AAACF,YAAAA,KAAK,EAAC;AAAP,WAAd;AAED,SAxBD;AAyBD;;AAEDC,MAAAA,KAAK,CAAC2B,cAAN;AAED,KAnDkB;;AAAA,UAoDnBC,YApDmB,GAoDJ,UAAAC,CAAC,EAAI;AAClB,UAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAzB;AACA,UAAIC,UAAU,GAAGJ,CAAC,CAACE,MAAF,CAASG,KAA1B;AACA,UAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKhC,KAAL,CAAWC,IAA7B,CAAf;AACA6B,MAAAA,QAAQ,CAACL,SAAD,CAAR,GAAsBG,UAAtB;;AAEA,YAAKhC,QAAL,CAAc;AAAEK,QAAAA,IAAI,EAAE6B;AAAR,OAAd;AACD,KA3DkB;;AAAA,UA6DnBhC,SA7DmB,GA6DP,YAAM;AAEhB,UAAMmC,MAAM,GAAGtD,GAAG,CAACuD,QAAJ,CAAa,MAAKlC,KAAL,CAAWC,IAAxB,EAA8BpB,MAA9B,CAAf;;AACA,UAAIoD,MAAM,CAACtB,KAAP,KAAiB,IAArB,EAA2B;AACzB,eAAO,IAAP;AACD;;AACDS,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ;;AACA,UAAIA,MAAM,CAACtB,KAAP,CAAaE,OAAb,CAAqBsB,QAArB,CAA8B,UAA9B,CAAJ,EAA+C;AAC7C,cAAKvC,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;;AACA,cAAKD,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAC;AAAP,SAAd;AACD,OAHD,MAIK;AACH,cAAKE,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;;AACA,cAAKD,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAC;AAAP,SAAd;AAED;;AACD,aAAO,KAAP;AACD,KA9EkB;;AAEjB,UAAKM,KAAL,GAAa;AACXgB,MAAAA,IAAI,EAAC,KADM;AAEXtB,MAAAA,KAAK,EAAE,KAFI;AAGXG,MAAAA,YAAY,EAAE,EAHH;AAIXI,MAAAA,IAAI,EAAE;AACJjB,QAAAA,QAAQ,EAAE,EADN;AAEJM,QAAAA,QAAQ,EAAE;AAFN;AAJK,KAAb;AAFiB;AAWlB;;;;6BAoEQ;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,KAAD;AAAO,QAAA,IAAI,cAAX;AAA2B,QAAA,SAAS,EAAEV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAGG,KAAKoB,KAAL,CAAWN,KAAX,IAAmB;AAAK,QAAA,GAAG,EAAE0C,OAAO,CAAC,sBAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHtB,EAIG,KAAKpC,KAAL,CAAWH,YAAX,IACC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,KAAKG,KAAL,CAAWH,YAAlC,CALJ,EAOE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKH,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAC,UAHL;AAIE,QAAA,WAAW,EAAC,eAJd;AAKE,QAAA,QAAQ,EAAE,KAAK6B,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAC,iBAHL;AAIE,QAAA,WAAW,EAAC,gBAJd;AAKE,QAAA,QAAQ,EAAE,KAAKA,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,EAoBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApBF,EAuBE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACoC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEc,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAiC,QAAA,EAAE,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpC,CAvBF,CAPF,CADF;AAqCD;;;;EAzHoCvE,S;;SAAlB0B,S","sourcesContent":["import React, { Component } from 'react'\r\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { BrowserRouter as Router, Route, Link ,Redirect} from \"react-router-dom\";\r\nimport Joi from \"joi\";\r\nimport DashBoard from '../pages/dashboard';\r\n\r\n\r\nconst schema = Joi.object().keys({\r\n  username: Joi.string()\r\n    .alphanum()\r\n    .min(3)\r\n    .max(30)\r\n    .required(),\r\n  password: Joi.string()\r\n    .min(8)\r\n    .required(),\r\n});\r\n\r\n\r\nconst URL_LOGIN ='http://localhost:5000/auth/login';\r\n\r\n\r\nexport default class LoginPage extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      done:false,\r\n      login: false,\r\n      errorMessage: \"\",\r\n      user: {\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n    }\r\n  }\r\n\r\n  login = (event) => {\r\n    this.setState({ errorMessage: \"\" })\r\n    this.setState({login:true})\r\n    if (this.validuser()) {\r\n      const body={\r\n        username : this.state.user.username,\r\n        password : this.state.user.password\r\n      }\r\n      \r\n      fetch (URL_LOGIN,{\r\n        method: 'POST',\r\n        headers:{\r\n          'content-type':'application/json'\r\n        },\r\n        body:JSON.stringify(body),\r\n      }).then(response=>{\r\n        if(response.ok){\r\n          return response.json();\r\n          \r\n        }\r\n        return response.json().then(error=>{\r\n          throw new Error(error.message);\r\n        });\r\n      }).then(token=>{\r\n        localStorage.token=token;\r\n        this.setState({done:true});\r\n        this.setState({login:false});\r\n        this.props.history.replace('/dashboard')\r\n      }).catch(error=>{\r\n        console.log('fetch error'+error)\r\n        this.setState({ errorMessage: error.message });\r\n        this.setState({login:false})\r\n\r\n      });\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n  }\r\n  handleChange = e => {\r\n    let inputName = e.target.name;\r\n    let inputValue = e.target.value;\r\n    let copyUser = Object.assign({}, this.state.user);\r\n    copyUser[inputName] = inputValue;\r\n\r\n    this.setState({ user: copyUser });\r\n  }\r\n\r\n  validuser = () => {\r\n\r\n    const result = Joi.validate(this.state.user, schema);\r\n    if (result.error === null) {\r\n      return true;\r\n    }\r\n    console.log(result);\r\n    if (result.error.message.includes('username')) {\r\n      this.setState({ errorMessage: \"Username invalid\" });\r\n      this.setState({login:false})\r\n    }\r\n    else {\r\n      this.setState({ errorMessage: \"Password invalid\" });\r\n      this.setState({login:false})\r\n\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n   \r\n    return (\r\n      <div>\r\n            <Route path={`/dashboard`} component={DashBoard}/>\r\n\r\n        {this.state.login&&(<img src={require('../asset/loading.svg')}></img>)}\r\n        {this.state.errorMessage && (\r\n          <Alert color=\"danger\">{this.state.errorMessage}</Alert>\r\n        )}\r\n        <Form onSubmit={this.login}>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input\r\n              type=\"username\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Your Username\"\r\n              onChange={this.handleChange} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n              placeholder=\"Your Password \"\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <Button>\r\n            Login\r\n        </Button>\r\n          <FormText color=\"muted\">\r\n            Doesn't have an account? register <Link style={{ color: 'white' }} to={`/register`}>here</Link>\r\n          </FormText>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}